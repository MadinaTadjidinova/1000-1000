# from aiogram import types, Router
# from aiogram.types import CallbackQuery
# from google_sheets import update_payment_status
# from config import admin_bot, sponsor_bot

# router = Router()

# @router.callback_query(lambda c: c.data.startswith("confirm") or c.data.startswith("reject"))
# async def process_payment_review(callback: CallbackQuery):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –ø–æ —á–µ–∫—É"""
#     action, user_id, amount = callback.data.split("|")

#     if action == "confirm":
#         update_payment_status(user_id, amount, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ")
#         await callback.message.edit_caption(
#             caption=f"‚úÖ –ß–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {user_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!\n–°—É–º–º–∞: {amount} —Å–æ–º."
#         )
#         await callback.answer("‚úÖ –ß–µ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!")

#         # üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#         try:
#             await sponsor_bot.send_message(
#                 chat_id=user_id,
#                 text=f"‚úÖ –í–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–∞ {amount} —Å–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!"
#             )
#         except Exception as e:
#             print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


#     elif action == "reject":
#         update_payment_status(user_id, amount, "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ")
#         await callback.message.edit_caption(
#             caption=f"‚ùå –ß–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {user_id} –æ—Ç–∫–ª–æ–Ω—ë–Ω!\n–°—É–º–º–∞: {amount} —Å–æ–º."
#         )
#         await callback.answer("‚ùå –ß–µ–∫ –æ—Ç–∫–ª–æ–Ω—ë–Ω!")

#         # üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#         try:
#             await sponsor_bot.send_message(
#                 chat_id=user_id,
#                 text=f"‚ùå –í–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–∞ {amount} —Å–æ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π —á–µ–∫."
#             )
#         except Exception as e:
#             print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


from aiogram import Router, F
from aiogram.types import CallbackQuery
from config import admin_bot
from payment_sheets import update_payment_status
from config import admin_bot, sponsor_bot

router = Router()

@router.callback_query(F.data.startswith("confirm") | F.data.startswith("reject"))
async def handle_payment_decision(callback: CallbackQuery):
    action, user_id, amount = callback.data.split("|")
    status = "‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ" if action == "confirm" else "‚ùå–û—Ç–∫–ª–æ–Ω–µ–Ω–æ"  # ‚úÖ —Å–Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º
    username = callback.from_user.username or f"user_{user_id}"
    update_payment_status(user_id, amount, status)                   # –ø–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–µ–º

    await callback.message.edit_caption(
        caption=f"–ß–µ–∫ –Ω–∞ {amount} —Å–æ–º –æ—Ç @{username} ‚Äî {status.lower()}."
    )
    await callback.answer(f"–ß–µ–∫ {status.lower()}!")

    # (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        await sponsor_bot.send_message(
            chat_id=user_id,
            text=f"–í–∞—à —á–µ–∫ –Ω–∞ {amount} —Å–æ–º {status.lower()} ‚úîÔ∏è"
        )
    except Exception:
        pass
